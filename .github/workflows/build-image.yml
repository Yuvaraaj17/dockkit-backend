name: Build Custom Docker Image

on:
  workflow_dispatch:
    inputs:
      base_image:
        description: 'Base Docker image (e.g., ubuntu, alpine)'
        required: true
      packages:
        description: 'Comma-separated list of packages (e.g., git,g++,cmake)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check docker
        run: docker --version
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Check docker
        run: docker --version
      - name: Split packages string into array and generate Dockerfile
        run: |
          BASE_IMAGE="${{ github.event.inputs.base_image }}"
          IFS=',' read -ra PACKAGES <<< "${{ github.event.inputs.packages }}"

          echo "FROM $BASE_IMAGE" > Dockerfile
          echo -n "RUN apt-get update && apt-get install -y" >> Dockerfile

          for pkg in "${PACKAGES[@]}"; do
              echo -n " $pkg" >> Dockerfile
          done

          echo "" >> Dockerfile
      - name: Print docker file
        run: cat Dockerfile

      - name: Confirm Dockerfile exists
        run: ls -l Dockerfile

      - name: Build Docker image
        run: |
          docker build --progress=plain -t ghcr.io/yuvaraaj17/custom-image:${{ github.run_number }} .

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        run: |
          REPO_LC="${GITHUB_REPOSITORY,,}"  # Convert to lowercase
          docker push ghcr.io/yuvaraaj17/custom-image:${{ github.run_number }}

      - name: Output image URL
        id: imageurl
        run: |
          REPO_LC="${GITHUB_REPOSITORY,,}"  # Convert to lowercase
          echo "image_url=ghcr.io/yuvaraaj17/custom-image:${{ github.run_number }}" >> $GITHUB_OUTPUT
      - name: Use image URL
        run: echo "Docker image is ${{ steps.imageurl.outputs.image_url }}"

